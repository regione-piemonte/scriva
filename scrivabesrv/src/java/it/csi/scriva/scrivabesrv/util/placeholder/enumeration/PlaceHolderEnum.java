/*-
 * ========================LICENSE_START=================================
 * 
 * Copyright (C) 2025 Regione Piemonte
 * 
 * SPDX-FileCopyrightText: (C) Copyright 2025 Regione Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
package it.csi.scriva.scrivabesrv.util.placeholder.enumeration;

import java.util.Arrays;

/**
 * The enum Place holder enum.
 *
 * @author CSI PIEMONTE
 */
public enum PlaceHolderEnum {

    PH_ACS_ADEMPI_PEC("{PH_ACS_ADEMPI_PEC}"),
    PH_ACS_ADEMPI_EMAIL("{PH_ACS_ADEMPI_EMAIL}"),
    PH_ACP_DES_COMPETENZA_TERRITORIO_ESTESA("{PH_ACP_DES_COMPETENZA_TERRITORIO_ESTESA}"),
    PH_ACP_SITO_WEB("{PH_ACP_SITO_WEB}"),
    PH_ACP_INDIRIZZO_COMPETENZA("{PH_ACP_INDIRIZZO_COMPETENZA}"),
    PH_ACP_NUM_CIVICO("{PH_ACP_NUM_CIVICO}"),
    PH_ACP_CAP_COMPETENZA("{PH_ACP_CAP_COMPETENZA}"),
    PH_ACP_ADEMPI_EMAIL("{PH_ACP_ADEMPI_EMAIL}"),
    PH_ACP_PEC("{PH_ACP_PEC}"),
    PH_ACP_EMAIL("{PH_ACP_EMAIL}"),
    PH_ACP_DES_TIPO_COMPETENZA_ESTESA("{PH_ACP_DES_TIPO_COMPETENZA_ESTESA}"),
    PH_ACS_DES_COMPETENZA_TERRITORIO("{PH_ACS_DES_COMPETENZA_TERRITORIO}"),
    PH_ACS_SITO_WEB("{PH_ACS_SITO_WEB}"),
    PH_ACS_INDIRIZZO_COMPETENZA("{PH_ACS_INDIRIZZO_COMPETENZA}"),
    PH_ACS_NUM_CIVICO("{PH_ACS_NUM_CIVICO}"),
    PH_ACS_CAP_COMPETENZA("{PH_ACS_CAP_COMPETENZA}"),
    PH_ACS_EMAIL("{PH_ACS_EMAIL}"),
    PH_SOG_IST_CF_SOGGETTO("{PH_SOG_IST_CF_SOGGETTO}"),
    PH_ACS_PEC("{PH_ACS_PEC}"),
    PH_ACS_DES_TIPO_COMPETENZA_ESTESA("{PH_ACS_DES_TIPO_COMPETENZA_ESTESA}"),
    PH_SOG_IST_COGNOME("{PH_SOG_IST_COGNOME}"),
    PH_SOG_IST_NOME("{PH_SOG_IST_NOME}"),
    PH_SOGG_IST_DENOM_COMUNE_NASCITA("{PH_SOGG_IST_DENOM_COMUNE_NASCITA}"),
    PH_SOGG_IST_CAP_COMUNE_NASCITA("{PH_SOGG_IST_CAP_COMUNE_NASCITA}"),
    PH_SOGG_IST_DENOM_PROVINCIA_NASCITA("{PH_SOGG_IST_DENOM_PROVINCIA_NASCITA}"),
    PH_SOGG_IST_SIGLA_PROVINCIA_NASCITA("{PH_SOGG_IST_SIGLA_PROVINCIA_NASCITA}"),
    PH_SOG_IST_CITTA_ESTERA_NASCITA("{PH_SOG_IST_CITTA_ESTERA_NASCITA}"),
    PH_SOG_IST_DES_EMAIL("{PH_SOG_IST_DES_EMAIL}"),
    PH_SOG_IST_DES_PEC("{PH_SOG_IST_DES_PEC}"),
    PH_SOG_IST_NUM_CELLULARE("{PH_SOG_IST_NUM_CELLULARE}"),
    PH_SOGG_IST_DENOM_COMUNE_SEDE_LEG("{PH_SOGG_IST_DENOM_COMUNE_SEDE_LEG}"),
    PH_SOGG_IST_CAP_COMUNE_SEDE_LEG("{PH_SOGG_IST_CAP_COMUNE_SEDE_LEG}"),
    PH_SOGG_IST_DENOM_PROVINCIA_SEDE_LEGALE("{PH_SOGG_IST_DENOM_PROVINCIA_SEDE_LEGALE}"),
    PH_SOGG_IST_SIGLA_PROVINCIA_SEDE_LEGALE("{PH_SOGG_IST_SIGLA_PROVINCIA_SEDE_LEGALE}"),
    PH_SOGG_IST_CITTA_ESTERA_SEDE_LEGALE("{PH_SOGG_IST_CITTA_ESTERA_SEDE_LEGALE}"),
    PH_SOGG_IST_INDIRIZZO_SOGGETTO("{PH_SOGG_IST_INDIRIZZO_SOGGETTO}"),
    PH_SOGG_IST_NUM_CIVICO_INDIRIZZO("{PH_SOGG_IST_NUM_CIVICO_INDIRIZZO}"),
    PH_SOGG_IST_DES_LOCALITA("{PH_SOGG_IST_DES_LOCALITA}"),
    PH_SOGG_IST_DENOM_COMUNE_RESIDENZA("{PH_SOGG_IST_DENOM_COMUNE_RESIDENZA}"),
    PH_SOGG_IST_CAP_COMUNE_RESIDENZA("{PH_SOGG_IST_CAP_COMUNE_RESIDENZA}"),
    PH_SOGG_IST_SIGLA_PROVINCIA_RESIDENZA("{PH_SOGG_IST_SIGLA_PROVINCIA_RESIDENZA}"),
    PH_SOGG_IST_CITTA_ESTERA_RESIDENZA("{PH_SOGG_IST_CITTA_ESTERA_RESIDENZA}"),
    PH_SOGG_IST_ID_NAZIONE_RESIDENZA("{PH_SOGG_IST_ID_NAZIONE_RESIDENZA}"),
    PH_RICHIEDENTE_IST_DENOM_COMUNE_RESIDENZA("{PH_RICHIEDENTE_IST_DENOM_COMUNE_RESIDENZA}"),
    PH_RICHIEDENTE_IST_CAP_COMUNE_RESIDENZA("{PH_RICHIEDENTE_IST_CAP_COMUNE_RESIDENZA}"),
    PH_SOG_IST_DEN_SOGGETTO("{PH_SOG_IST_DEN_SOGGETTO}"),
    PH_IST_DATA_PRESENTATA_ISTANZA("{PH_IST_DATA_PRESENTATA_ISTANZA}"),
    PH_OGG_IST_SITO_COD_AMMINISTRATIVO_2000("{PH_OGG_IST_SITO_COD_AMMINISTRATIVO_2000}"),
    PH_OGG_IST_SITO_DES_SITO_NATURA_2000("{PH_OGG_IST_SITO_DES_SITO_NATURA_2000}"),
    PH_OGG_IST_SITO_NUM_DISTANZA("{PH_OGG_IST_SITO_NUM_DISTANZA}"),
    PH_OGG_IST_SITO_FLG_RICADE("{PH_OGG_IST_SITO_FLG_RICADE}"),
    PH_OGG_IST_AREA_DES_AREA_PROTETTA("{PH_OGG_IST_AREA_DES_AREA_PROTETTA}"),
    PH_OGG_IST_AREA_COD_AMMINISTRATIVO_2000("{PH_OGG_IST_AREA_COD_AMMINISTRATIVO_2000}"),
    PH_OGG_IST_AREA_DES_SITO_NATURA_2000("{PH_OGG_IST_AREA_DES_SITO_NATURA_2000}"),
    PH_OGG_IST_AREA_FLG_RICADE("{PH_OGG_IST_AREA_FLG_RICADE}"),
    PH_MITTENTE_EMAIL("{PH_MITTENTE_EMAIL}"),
    PH_MITTENTE_PEC("{PH_MITTENTE_PEC}"),
    PH_OGG_IST_SITO_DES_SITO_2000("{PH_OGG_IST_SITO_DES_SITO_2000}"),
    PH_ACP_DES_COMPETENZA_TERRITORIO("{PH_ACP_DES_COMPETENZA_TERRITORIO}"),
    PH_ACP_ADEMPI_PEC("{PH_ACP_ADEMPI_PEC}"),
    PH_NOTIFICA_APP_DATA_CANCELLAZIONE("{PH_NOTIFICA_APP_DATA_CANCELLAZIONE}"),
    PH_NOTIFICA_RIF_CANALE("{PH_NOTIFICA_RIF_CANALE}"),
    PH_NOTIFICA_APP_DATA_INSERIMENTO("{PH_NOTIFICA_APP_DATA_INSERIMENTO}"),
    PH_IST_DES_ESTESA_ADEMPIMENTO("{PH_IST_DES_ESTESA_ADEMPIMENTO}"),
    PH_IST_DATA_INSERIMENTO_ISTANZA("{PH_IST_DATA_INSERIMENTO_ISTANZA}"),
    PH_IST_DATA_INSERIMENTO_PRATICA("{PH_IST_DATA_INSERIMENTO_PRATICA}"),
    PH_IST_DATA_PUBBLICAZIONE("{PH_IST_DATA_PUBBLICAZIONE}"),
    PH_IST_NUM_PROTOCOLLO_ISTANZA("{PH_IST_NUM_PROTOCOLLO_ISTANZA}"),
    PH_IST_DATA_CONCLUSIONE_PROCEDIMENTO("{PH_IST_DATA_CONCLUSIONE_PROCEDIMENTO}"),
    PH_IST_COD_PRATICA("{PH_IST_COD_PRATICA}"),
    PH_NOTIFICA_RIF_CANALE_CC("{PH_NOTIFICA_RIF_CANALE_CC}"),
    PH_IST_COD_ISTANZA("{PH_IST_COD_ISTANZA}"),
    PH_NOTIFICA_DATA_INVIO("{PH_NOTIFICA_DATA_INVIO}"),
    PH_NOTIFICA_STATO("{PH_NOTIFICA_STATO}"),
    PH_NOTIFICA_CF_DESTINATARIO("{PH_NOTIFICA_CF_DESTINATARIO}"),
    PH_NOTIFICA_OTP("{PH_NOTIFICA_OTP}"),
    PH_OGG_IST_CAP_COMUNE("{PH_OGG_IST_CAP_COMUNE}"),
    PH_OGG_IST_SIGLA_PROVINCIA("{PH_OGG_IST_SIGLA_PROVINCIA}"),
    PH_OGG_IST_DEN_INDIRIZZO("{PH_OGG_IST_DEN_INDIRIZZO}"),
    PH_NUM_CIVICO("{PH_NUM_CIVICO}"),
    PH_DES_LOCALITA("{PH_DES_LOCALITA}"),
    PH_COMPILANTE_COGNOME("{PH_COMPILANTE_COGNOME}"),
    PH_OGG_IST_DENOM_COMUNE("{PH_OGG_IST_DENOM_COMUNE}"),
    PH_COMPILANTE_NOME("{PH_COMPILANTE_NOME}"),
    PH_COMPILANTE_CF("{PH_COMPILANTE_CF}"),
    PH_RICHIEDENTE_IST_ID_NAZIONE_RESIDENZA("{PH_RICHIEDENTE_IST_ID_NAZIONE_RESIDENZA}"),
    PH_RICHIEDENTE_IST_INDIRIZZO_SOGGETTO("{PH_RICHIEDENTE_IST_INDIRIZZO_SOGGETTO}"),
    PH_RICHIEDENTE_IST_NUM_CIVICO_INDIRIZZO("{PH_RICHIEDENTE_IST_NUM_CIVICO_INDIRIZZO}"),
    PH_RICHIEDENTE_IST_DES_LOCALITA("{PH_RICHIEDENTE_IST_DES_LOCALITA}"),
    PH_RICHIEDENTE_IST_DES_EMAIL("{PH_RICHIEDENTE_IST_DES_EMAIL}"),
    PH_RICHIEDENTE_IST_NUM_CELLULARE("{PH_RICHIEDENTE_IST_NUM_CELLULARE}"),
    PH_IST_DATA_PRESENTA_INTEGRAZIONE("{PH_IST_DATA_PRESENTA_INTEGRAZIONE}"),
    PH_RICHIEDENTE_IST_CITTA_ESTERA_RESIDENZA("{PH_RICHIEDENTE_IST_CITTA_ESTERA_RESIDENZA}"),
    PH_ACS_DES_COMPETENZA_TERRITORIO_ESTESA("{PH_ACS_DES_COMPETENZA_TERRITORIO_ESTESA}"),
    PH_NOTIFICA_APP_CF_DESTINATARIO("{PH_NOTIFICA_APP_CF_DESTINATARIO}"),
    PH_NOTIFICA_APP_DATA_LETTURA("{PH_NOTIFICA_APP_DATA_LETTURA}"),
    PH_IST_DES_ADEMPIMENTO("{PH_IST_DES_ADEMPIMENTO}"),
    PH_OGG_IST_DENOM_PROVINCIA("{PH_OGG_IST_DENOM_PROVINCIA}"),
    PH_SOG_IST_DATA_NASCITA_SOGGETTO("{PH_SOG_IST_DATA_NASCITA_SOGGETTO}"),
    PH_SOGG_IST_ID_NAZIONE_SEDE_LEGALE("{PH_SOGG_IST_ID_NAZIONE_SEDE_LEGALE}"),
    PH_SOGG_IST_DENOM_PROVINCIA_RESIDENZA("{PH_SOGG_IST_DENOM_PROVINCIA_RESIDENZA}"),
    PH_RICHIEDENTE_IST_DENOM_PROVINCIA_RESIDENZA("{PH_RICHIEDENTE_IST_DENOM_PROVINCIA_RESIDENZA}"),
    PH_RICHIEDENTE_IST_SIGLA_PROVINCIA_RESIDENZA("{PH_RICHIEDENTE_IST_SIGLA_PROVINCIA_RESIDENZA}"),
    PH_RICHIEDENTE_IST_DES_PEC("{PH_RICHIEDENTE_IST_DES_PEC}"),
    PH_OTP_NOTIFICA("{PH_OTP_NOTIFICA}"),
    PH_OGG_IST_DEN_OGGETTO("{PH_OGG_IST_DEN_OGGETTO}"),
    
    PH_ELENCO_PLACEHOLDER("{PH_ELENCO_PLACEHOLDER}");

    private final String descrizione;

    PlaceHolderEnum(String descrizione) {
        this.descrizione = descrizione;
    }

    /**
     * Gets descrizione.
     *
     * @return string descrizione
     */
    public String getDescrizione() {
        return descrizione;
    }

    /**
     * Find by descr azioni base enum.
     *
     * @param descrizione descrizione
     * @return ProfiloAppEnum azioni base enum
     */
    public static PlaceHolderEnum findByDescr(final String descrizione) {
        return Arrays.stream(values()).filter(value -> value.getDescrizione().equals(descrizione)).findFirst().orElse(null);
    }

}