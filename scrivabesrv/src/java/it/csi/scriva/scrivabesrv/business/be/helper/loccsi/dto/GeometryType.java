/*-
 * ========================LICENSE_START=================================
 * 
 * Copyright (C) 2025 Regione Piemonte
 * 
 * SPDX-FileCopyrightText: (C) Copyright 2025 Regione Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * ricerca-fulltext-geografica
 * Servizi di ricerca full text con localizzazione geografica
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.scriva.scrivabesrv.business.be.helper.loccsi.dto;

import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

/**
 * GeometryType
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-02-24T08:29:11.008Z")
public class GeometryType {
  private CoordinateReferenceSystem coordinateReferenceSystem = null;

  private AttributeType _super = null;

  private Boolean identified = null;

  private List<Filter> restrictions = null;

  private Map<String, Object> userData = null;

  private InternationalString description = null;

  private Name name = null;

  private Boolean _abstract = null;

  public GeometryType coordinateReferenceSystem(CoordinateReferenceSystem coordinateReferenceSystem) {
    this.coordinateReferenceSystem = coordinateReferenceSystem;
    return this;
  }

   /**
   * Get coordinateReferenceSystem
   * @return coordinateReferenceSystem
  **/
  @ApiModelProperty(value = "")
  public CoordinateReferenceSystem getCoordinateReferenceSystem() {
    return coordinateReferenceSystem;
  }

  public void setCoordinateReferenceSystem(CoordinateReferenceSystem coordinateReferenceSystem) {
    this.coordinateReferenceSystem = coordinateReferenceSystem;
  }

  public GeometryType _super(AttributeType _super) {
    this._super = _super;
    return this;
  }

   /**
   * Get _super
   * @return _super
  **/
  @ApiModelProperty(value = "")
  public AttributeType getSuper() {
    return _super;
  }

  public void setSuper(AttributeType _super) {
    this._super = _super;
  }

  public GeometryType identified(Boolean identified) {
    this.identified = identified;
    return this;
  }

   /**
   * Get identified
   * @return identified
  **/
  @ApiModelProperty(value = "")
  public Boolean isIdentified() {
    return identified;
  }

  public void setIdentified(Boolean identified) {
    this.identified = identified;
  }

  public GeometryType restrictions(List<Filter> restrictions) {
    this.restrictions = restrictions;
    return this;
  }

  public GeometryType addRestrictionsItem(Filter restrictionsItem) {
    if (this.restrictions == null) {
      this.restrictions = new ArrayList<Filter>();
    }
    this.restrictions.add(restrictionsItem);
    return this;
  }

   /**
   * Get restrictions
   * @return restrictions
  **/
  @ApiModelProperty(value = "")
  public List<Filter> getRestrictions() {
    return restrictions;
  }

  public void setRestrictions(List<Filter> restrictions) {
    this.restrictions = restrictions;
  }

  public GeometryType userData(Map<String, Object> userData) {
    this.userData = userData;
    return this;
  }

  public GeometryType putUserDataItem(String key, Object userDataItem) {
    if (this.userData == null) {
      this.userData = new HashMap<String, Object>();
    }
    this.userData.put(key, userDataItem);
    return this;
  }

   /**
   * Get userData
   * @return userData
  **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getUserData() {
    return userData;
  }

  public void setUserData(Map<String, Object> userData) {
    this.userData = userData;
  }

  public GeometryType description(InternationalString description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public InternationalString getDescription() {
    return description;
  }

  public void setDescription(InternationalString description) {
    this.description = description;
  }

  public GeometryType name(Name name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public Name getName() {
    return name;
  }

  public void setName(Name name) {
    this.name = name;
  }

  public GeometryType _abstract(Boolean _abstract) {
    this._abstract = _abstract;
    return this;
  }

   /**
   * Get _abstract
   * @return _abstract
  **/
  @ApiModelProperty(value = "")
  public Boolean isAbstract() {
    return _abstract;
  }

  public void setAbstract(Boolean _abstract) {
    this._abstract = _abstract;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GeometryType geometryType = (GeometryType) o;
    return Objects.equals(this.coordinateReferenceSystem, geometryType.coordinateReferenceSystem) &&
        Objects.equals(this._super, geometryType._super) &&
        Objects.equals(this.identified, geometryType.identified) &&
        Objects.equals(this.restrictions, geometryType.restrictions) &&
        Objects.equals(this.userData, geometryType.userData) &&
        Objects.equals(this.description, geometryType.description) &&
        Objects.equals(this.name, geometryType.name) &&
        Objects.equals(this._abstract, geometryType._abstract);
  }

  @Override
  public int hashCode() {
    return Objects.hash(coordinateReferenceSystem, _super, identified, restrictions, userData, description, name, _abstract);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GeometryType {\n");

    sb.append("    coordinateReferenceSystem: ").append(toIndentedString(coordinateReferenceSystem)).append("\n");
    sb.append("    _super: ").append(toIndentedString(_super)).append("\n");
    sb.append("    identified: ").append(toIndentedString(identified)).append("\n");
    sb.append("    restrictions: ").append(toIndentedString(restrictions)).append("\n");
    sb.append("    userData: ").append(toIndentedString(userData)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    _abstract: ").append(toIndentedString(_abstract)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}