/*-
 * ========================LICENSE_START=================================
 * 
 * Copyright (C) 2025 Regione Piemonte
 * 
 * SPDX-FileCopyrightText: (C) Copyright 2025 Regione Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * ricerca-fulltext-geografica
 * Servizi di ricerca full text con localizzazione geografica
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.scriva.scrivabesrv.business.be.helper.loccsi.dto;

import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * GenericName
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-02-24T08:29:11.008Z")
public class GenericName {
  private List<LocalName> parsedNames = null;

  public GenericName parsedNames(List<LocalName> parsedNames) {
    this.parsedNames = parsedNames;
    return this;
  }

  public GenericName addParsedNamesItem(LocalName parsedNamesItem) {
    if (this.parsedNames == null) {
      this.parsedNames = new ArrayList<LocalName>();
    }
    this.parsedNames.add(parsedNamesItem);
    return this;
  }

   /**
   * Get parsedNames
   * @return parsedNames
  **/
  @ApiModelProperty(value = "")
  public List<LocalName> getParsedNames() {
    return parsedNames;
  }

  public void setParsedNames(List<LocalName> parsedNames) {
    this.parsedNames = parsedNames;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenericName genericName = (GenericName) o;
    return Objects.equals(this.parsedNames, genericName.parsedNames);
  }

  @Override
  public int hashCode() {
    return Objects.hash(parsedNames);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenericName {\n");

    sb.append("    parsedNames: ").append(toIndentedString(parsedNames)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}