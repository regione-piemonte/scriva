/*-
 * ========================LICENSE_START=================================
 * 
 * Copyright (C) 2025 Regione Piemonte
 * 
 * SPDX-FileCopyrightText: (C) Copyright 2025 Regione Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * ricerca-fulltext-geografica
 * Servizi di ricerca full text con localizzazione geografica
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.scriva.scrivabesrv.business.be.helper.loccsi.dto;

import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Address
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-02-24T08:29:11.008Z")
public class Address {
  private List<String> deliveryPoints = null;

  private InternationalString city = null;

  private InternationalString administrativeArea = null;

  private String postalCode = null;

  private List<String> electronicMailAddresses = null;

  private InternationalString country = null;

  public Address deliveryPoints(List<String> deliveryPoints) {
    this.deliveryPoints = deliveryPoints;
    return this;
  }

  public Address addDeliveryPointsItem(String deliveryPointsItem) {
    if (this.deliveryPoints == null) {
      this.deliveryPoints = new ArrayList<String>();
    }
    this.deliveryPoints.add(deliveryPointsItem);
    return this;
  }

   /**
   * Get deliveryPoints
   * @return deliveryPoints
  **/
  @ApiModelProperty(value = "")
  public List<String> getDeliveryPoints() {
    return deliveryPoints;
  }

  public void setDeliveryPoints(List<String> deliveryPoints) {
    this.deliveryPoints = deliveryPoints;
  }

  public Address city(InternationalString city) {
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @ApiModelProperty(value = "")
  public InternationalString getCity() {
    return city;
  }

  public void setCity(InternationalString city) {
    this.city = city;
  }

  public Address administrativeArea(InternationalString administrativeArea) {
    this.administrativeArea = administrativeArea;
    return this;
  }

   /**
   * Get administrativeArea
   * @return administrativeArea
  **/
  @ApiModelProperty(value = "")
  public InternationalString getAdministrativeArea() {
    return administrativeArea;
  }

  public void setAdministrativeArea(InternationalString administrativeArea) {
    this.administrativeArea = administrativeArea;
  }

  public Address postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Get postalCode
   * @return postalCode
  **/
  @ApiModelProperty(value = "")
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public Address electronicMailAddresses(List<String> electronicMailAddresses) {
    this.electronicMailAddresses = electronicMailAddresses;
    return this;
  }

  public Address addElectronicMailAddressesItem(String electronicMailAddressesItem) {
    if (this.electronicMailAddresses == null) {
      this.electronicMailAddresses = new ArrayList<String>();
    }
    this.electronicMailAddresses.add(electronicMailAddressesItem);
    return this;
  }

   /**
   * Get electronicMailAddresses
   * @return electronicMailAddresses
  **/
  @ApiModelProperty(value = "")
  public List<String> getElectronicMailAddresses() {
    return electronicMailAddresses;
  }

  public void setElectronicMailAddresses(List<String> electronicMailAddresses) {
    this.electronicMailAddresses = electronicMailAddresses;
  }

  public Address country(InternationalString country) {
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @ApiModelProperty(value = "")
  public InternationalString getCountry() {
    return country;
  }

  public void setCountry(InternationalString country) {
    this.country = country;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Address address = (Address) o;
    return Objects.equals(this.deliveryPoints, address.deliveryPoints) &&
        Objects.equals(this.city, address.city) &&
        Objects.equals(this.administrativeArea, address.administrativeArea) &&
        Objects.equals(this.postalCode, address.postalCode) &&
        Objects.equals(this.electronicMailAddresses, address.electronicMailAddresses) &&
        Objects.equals(this.country, address.country);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deliveryPoints, city, administrativeArea, postalCode, electronicMailAddresses, country);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Address {\n");

    sb.append("    deliveryPoints: ").append(toIndentedString(deliveryPoints)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    administrativeArea: ").append(toIndentedString(administrativeArea)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    electronicMailAddresses: ").append(toIndentedString(electronicMailAddresses)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}