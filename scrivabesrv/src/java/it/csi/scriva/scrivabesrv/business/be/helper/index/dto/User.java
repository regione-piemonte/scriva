/*-
 * ========================LICENSE_START=================================
 * 
 * Copyright (C) 2025 Regione Piemonte
 * 
 * SPDX-FileCopyrightText: (C) Copyright 2025 Regione Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * ECMEngine
 * Servizi di fruizione ECM INDEX.
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.scriva.scrivabesrv.business.be.helper.index.dto;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Rappresenta un utente di ECMEngine.
 */
@ApiModel(description = "Rappresenta un utente di ECMEngine.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-03-29T13:41:28.556Z")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class User {
    @JsonProperty("name")
    private String name = null;

    @JsonProperty("surname")
    private String surname = null;

    @JsonProperty("username")
    private String username = null;

    @JsonProperty("password")
    private String password = null;

    @JsonProperty("homeFolderPath")
    private String homeFolderPath = null;

    /**
     * Name user.
     *
     * @param name the name
     * @return the user
     */
    public User name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Nome anagrafico dell&#39;utente.
     *
     * @return name name
     */
    @ApiModelProperty(example = "Mario", value = "Nome anagrafico dell'utente.")
    public String getName() {
        return name;
    }

    /**
     * Sets name.
     *
     * @param name the name
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Surname user.
     *
     * @param surname the surname
     * @return the user
     */
    public User surname(String surname) {
        this.surname = surname;
        return this;
    }

    /**
     * Cognome anagrafico dell&#39;utente.
     *
     * @return surname surname
     */
    @ApiModelProperty(example = "Rossi", value = "Cognome anagrafico dell'utente.")
    public String getSurname() {
        return surname;
    }

    /**
     * Sets surname.
     *
     * @param surname the surname
     */
    public void setSurname(String surname) {
        this.surname = surname;
    }

    /**
     * Username user.
     *
     * @param username the username
     * @return the user
     */
    public User username(String username) {
        this.username = username;
        return this;
    }

    /**
     * Nome utente applicativo.
     *
     * @return username username
     */
    @ApiModelProperty(example = "user", value = "Nome utente applicativo.")
    public String getUsername() {
        return username;
    }

    /**
     * Sets username.
     *
     * @param username the username
     */
    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * Password user.
     *
     * @param password the password
     * @return the user
     */
    public User password(String password) {
        this.password = password;
        return this;
    }

    /**
     * Password dell&#39;utente.
     *
     * @return password password
     */
    @ApiModelProperty(value = "Password dell'utente.")
    public String getPassword() {
        return password;
    }

    /**
     * Sets password.
     *
     * @param password the password
     */
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Home folder path user.
     *
     * @param homeFolderPath the home folder path
     * @return the user
     */
    public User homeFolderPath(String homeFolderPath) {
        this.homeFolderPath = homeFolderPath;
        return this;
    }

    /**
     * Percorso della user home dell&#39;utente.
     *
     * @return homeFolderPath home folder path
     */
    @ApiModelProperty(value = "Percorso della user home dell'utente.")
    public String getHomeFolderPath() {
        return homeFolderPath;
    }

    /**
     * Sets home folder path.
     *
     * @param homeFolderPath the home folder path
     */
    public void setHomeFolderPath(String homeFolderPath) {
        this.homeFolderPath = homeFolderPath;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        User user = (User) o;
        return Objects.equals(this.name, user.name) &&
                Objects.equals(this.surname, user.surname) &&
                Objects.equals(this.username, user.username) &&
                Objects.equals(this.password, user.password) &&
                Objects.equals(this.homeFolderPath, user.homeFolderPath);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, surname, username, password, homeFolderPath);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class User {\n");

        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    surname: ").append(toIndentedString(surname)).append("\n");
        sb.append("    username: ").append(toIndentedString(username)).append("\n");
        sb.append("    password: ").append(toIndentedString(password)).append("\n");
        sb.append("    homeFolderPath: ").append(toIndentedString(homeFolderPath)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}