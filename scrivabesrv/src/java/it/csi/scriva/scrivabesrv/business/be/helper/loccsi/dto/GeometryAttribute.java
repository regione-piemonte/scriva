/*-
 * ========================LICENSE_START=================================
 * 
 * Copyright (C) 2025 Regione Piemonte
 * 
 * SPDX-FileCopyrightText: (C) Copyright 2025 Regione Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * ricerca-fulltext-geografica
 * Servizi di ricerca full text con localizzazione geografica
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.scriva.scrivabesrv.business.be.helper.loccsi.dto;

import io.swagger.annotations.ApiModelProperty;

import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 * GeometryAttribute
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-02-24T08:29:11.008Z")
public class GeometryAttribute {
  private BoundingBox bounds = null;

  private GeometryDescriptor descriptor = null;

  private GeometryType type = null;

  private Identifier identifier = null;

  private Boolean nillable = null;

  private Map<String, Object> userData = null;

  private Name name = null;

  private Object value = null;

  public GeometryAttribute bounds(BoundingBox bounds) {
    this.bounds = bounds;
    return this;
  }

   /**
   * Get bounds
   * @return bounds
  **/
  @ApiModelProperty(value = "")
  public BoundingBox getBounds() {
    return bounds;
  }

  public void setBounds(BoundingBox bounds) {
    this.bounds = bounds;
  }

  public GeometryAttribute descriptor(GeometryDescriptor descriptor) {
    this.descriptor = descriptor;
    return this;
  }

   /**
   * Get descriptor
   * @return descriptor
  **/
  @ApiModelProperty(value = "")
  public GeometryDescriptor getDescriptor() {
    return descriptor;
  }

  public void setDescriptor(GeometryDescriptor descriptor) {
    this.descriptor = descriptor;
  }

  public GeometryAttribute type(GeometryType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public GeometryType getType() {
    return type;
  }

  public void setType(GeometryType type) {
    this.type = type;
  }

  public GeometryAttribute identifier(Identifier identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @ApiModelProperty(value = "")
  public Identifier getIdentifier() {
    return identifier;
  }

  public void setIdentifier(Identifier identifier) {
    this.identifier = identifier;
  }

  public GeometryAttribute nillable(Boolean nillable) {
    this.nillable = nillable;
    return this;
  }

   /**
   * Get nillable
   * @return nillable
  **/
  @ApiModelProperty(value = "")
  public Boolean isNillable() {
    return nillable;
  }

  public void setNillable(Boolean nillable) {
    this.nillable = nillable;
  }

  public GeometryAttribute userData(Map<String, Object> userData) {
    this.userData = userData;
    return this;
  }

  public GeometryAttribute putUserDataItem(String key, Object userDataItem) {
    if (this.userData == null) {
      this.userData = new HashMap<String, Object>();
    }
    this.userData.put(key, userDataItem);
    return this;
  }

   /**
   * Get userData
   * @return userData
  **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getUserData() {
    return userData;
  }

  public void setUserData(Map<String, Object> userData) {
    this.userData = userData;
  }

  public GeometryAttribute name(Name name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public Name getName() {
    return name;
  }

  public void setName(Name name) {
    this.name = name;
  }

  public GeometryAttribute value(Object value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @ApiModelProperty(value = "")
  public Object getValue() {
    return value;
  }

  public void setValue(Object value) {
    this.value = value;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GeometryAttribute geometryAttribute = (GeometryAttribute) o;
    return Objects.equals(this.bounds, geometryAttribute.bounds) &&
        Objects.equals(this.descriptor, geometryAttribute.descriptor) &&
        Objects.equals(this.type, geometryAttribute.type) &&
        Objects.equals(this.identifier, geometryAttribute.identifier) &&
        Objects.equals(this.nillable, geometryAttribute.nillable) &&
        Objects.equals(this.userData, geometryAttribute.userData) &&
        Objects.equals(this.name, geometryAttribute.name) &&
        Objects.equals(this.value, geometryAttribute.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bounds, descriptor, type, identifier, nillable, userData, name, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GeometryAttribute {\n");

    sb.append("    bounds: ").append(toIndentedString(bounds)).append("\n");
    sb.append("    descriptor: ").append(toIndentedString(descriptor)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    nillable: ").append(toIndentedString(nillable)).append("\n");
    sb.append("    userData: ").append(toIndentedString(userData)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}