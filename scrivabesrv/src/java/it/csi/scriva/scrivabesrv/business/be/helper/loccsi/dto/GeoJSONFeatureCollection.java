/*-
 * ========================LICENSE_START=================================
 * 
 * Copyright (C) 2025 Regione Piemonte
 * 
 * SPDX-FileCopyrightText: (C) Copyright 2025 Regione Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * ricerca-fulltext-geografica
 * Servizi di ricerca full text con localizzazione geografica
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.scriva.scrivabesrv.business.be.helper.loccsi.dto;

import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * GeoJSONFeatureCollection
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-02-24T08:29:11.008Z")
public class GeoJSONFeatureCollection {
  private String type = null;

  private List<SimpleFeature> features = null;

  private List<Double> boundingBox = null;

  private List<Double> bbox = null;

  private GeoJSONCRS crs = null;

  public GeoJSONFeatureCollection type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public GeoJSONFeatureCollection features(List<SimpleFeature> features) {
    this.features = features;
    return this;
  }

  public GeoJSONFeatureCollection addFeaturesItem(SimpleFeature featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<SimpleFeature>();
    }
    this.features.add(featuresItem);
    return this;
  }

   /**
   * Get features
   * @return features
  **/
  @ApiModelProperty(value = "")
  public List<SimpleFeature> getFeatures() {
    return features;
  }

  public void setFeatures(List<SimpleFeature> features) {
    this.features = features;
  }

  public GeoJSONFeatureCollection boundingBox(List<Double> boundingBox) {
    this.boundingBox = boundingBox;
    return this;
  }

  public GeoJSONFeatureCollection addBoundingBoxItem(Double boundingBoxItem) {
    if (this.boundingBox == null) {
      this.boundingBox = new ArrayList<Double>();
    }
    this.boundingBox.add(boundingBoxItem);
    return this;
  }

   /**
   * Get boundingBox
   * @return boundingBox
  **/
  @ApiModelProperty(value = "")
  public List<Double> getBoundingBox() {
    return boundingBox;
  }

  public void setBoundingBox(List<Double> boundingBox) {
    this.boundingBox = boundingBox;
  }

  public GeoJSONFeatureCollection crs(GeoJSONCRS crs) {
    this.crs = crs;
    return this;
  }

  public List<Double> getBbox() {
    return bbox;
  }

  public void setBbox(List<Double> bbox) {
    this.bbox = bbox;
  }

  /**
   * Get crs
   * @return crs
  **/
  @ApiModelProperty(value = "")
  public GeoJSONCRS getCrs() {
    return crs;
  }

  public void setCrs(GeoJSONCRS crs) {
    this.crs = crs;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GeoJSONFeatureCollection geoJSONFeatureCollection = (GeoJSONFeatureCollection) o;
    return Objects.equals(this.type, geoJSONFeatureCollection.type) &&
        Objects.equals(this.features, geoJSONFeatureCollection.features) &&
        Objects.equals(this.boundingBox, geoJSONFeatureCollection.boundingBox) &&
        Objects.equals(this.bbox, geoJSONFeatureCollection.bbox) &&
        Objects.equals(this.crs, geoJSONFeatureCollection.crs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, features, boundingBox, bbox, crs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GeoJSONFeatureCollection {\n");

    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    boundingBox: ").append(toIndentedString(boundingBox)).append("\n");
    sb.append("    bbox: ").append(toIndentedString(bbox)).append("\n");
    sb.append("    crs: ").append(toIndentedString(crs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}