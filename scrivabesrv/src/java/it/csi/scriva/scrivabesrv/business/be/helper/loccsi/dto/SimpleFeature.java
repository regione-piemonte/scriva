/*-
 * ========================LICENSE_START=================================
 * 
 * Copyright (C) 2025 Regione Piemonte
 * 
 * SPDX-FileCopyrightText: (C) Copyright 2025 Regione Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * ricerca-fulltext-geografica
 * Servizi di ricerca full text con localizzazione geografica
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.scriva.scrivabesrv.business.be.helper.loccsi.dto;

import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

/**
 * SimpleFeature
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-02-24T08:29:11.008Z")
public class SimpleFeature {
  private SimpleFeatureType featureType = null;

  //private Object defaultGeometry = null;

  private Object geometry = null;

  private List<Object> attributes = null;

  private Integer attributeCount = null;

  //private SimpleFeatureType type = null;

  private String type = null;

  private String id = null;

  private GeometryAttribute defaultGeometryProperty = null;

  private BoundingBox bounds = null;

  private FeatureId identifier = null;

  private List<Property> value = null;

  //private List<Property> properties = null;
  private Object properties = null;

  private AttributeDescriptor descriptor = null;

  private Boolean nillable = null;

  private Map<String, Object> userData = null;

  private Name name = null;

  public SimpleFeature featureType(SimpleFeatureType featureType) {
    this.featureType = featureType;
    return this;
  }

   /**
   * Get featureType
   * @return featureType
  **/
  @ApiModelProperty(value = "")
  public SimpleFeatureType getFeatureType() {
    return featureType;
  }

  public void setFeatureType(SimpleFeatureType featureType) {
    this.featureType = featureType;
  }

  /*
  public SimpleFeature defaultGeometry(Object defaultGeometry) {
    this.defaultGeometry = defaultGeometry;
    return this;
  }

  public Object getDefaultGeometry() {
    return defaultGeometry;
  }

  public void setDefaultGeometry(Object defaultGeometry) {
    this.defaultGeometry = defaultGeometry;
  }
  */

  public Object getGeometry() {
    return geometry;
  }

  public void setGeometry(Object geometry) {
    this.geometry = geometry;
  }

  public SimpleFeature attributes(List<Object> attributes) {
    this.attributes = attributes;
    return this;
  }

  public SimpleFeature addAttributesItem(Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<Object>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @ApiModelProperty(value = "")
  public List<Object> getAttributes() {
    return attributes;
  }

  public void setAttributes(List<Object> attributes) {
    this.attributes = attributes;
  }

  public SimpleFeature attributeCount(Integer attributeCount) {
    this.attributeCount = attributeCount;
    return this;
  }

   /**
   * Get attributeCount
   * @return attributeCount
  **/
  @ApiModelProperty(value = "")
  public Integer getAttributeCount() {
    return attributeCount;
  }

  public void setAttributeCount(Integer attributeCount) {
    this.attributeCount = attributeCount;
  }

  /*
  public SimpleFeature type(SimpleFeatureType type) {
    this.type = type;
    return this;
  }
  */

  public SimpleFeature type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  /*
  @ApiModelProperty(value = "")
  public SimpleFeatureType getType() {
    return type;
  }

  public void setType(SimpleFeatureType type) {
    this.type = type;
  }
  */

  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public SimpleFeature id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public SimpleFeature defaultGeometryProperty(GeometryAttribute defaultGeometryProperty) {
    this.defaultGeometryProperty = defaultGeometryProperty;
    return this;
  }

   /**
   * Get defaultGeometryProperty
   * @return defaultGeometryProperty
  **/
  @ApiModelProperty(value = "")
  public GeometryAttribute getDefaultGeometryProperty() {
    return defaultGeometryProperty;
  }

  public void setDefaultGeometryProperty(GeometryAttribute defaultGeometryProperty) {
    this.defaultGeometryProperty = defaultGeometryProperty;
  }

  public SimpleFeature bounds(BoundingBox bounds) {
    this.bounds = bounds;
    return this;
  }

   /**
   * Get bounds
   * @return bounds
  **/
  @ApiModelProperty(value = "")
  public BoundingBox getBounds() {
    return bounds;
  }

  public void setBounds(BoundingBox bounds) {
    this.bounds = bounds;
  }

  public SimpleFeature identifier(FeatureId identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @ApiModelProperty(value = "")
  public FeatureId getIdentifier() {
    return identifier;
  }

  public void setIdentifier(FeatureId identifier) {
    this.identifier = identifier;
  }

  public SimpleFeature value(List<Property> value) {
    this.value = value;
    return this;
  }

  public SimpleFeature addValueItem(Property valueItem) {
    if (this.value == null) {
      this.value = new ArrayList<Property>();
    }
    this.value.add(valueItem);
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @ApiModelProperty(value = "")
  public List<Property> getValue() {
    return value;
  }

  public void setValue(List<Property> value) {
    this.value = value;
  }

  public SimpleFeature properties(List<Property> properties) {
    this.properties = properties;
    return this;
  }

  /*
  public SimpleFeature addPropertiesItem(Property propertiesItem) {
    if (this.properties == null) {
      this.properties = new ArrayList<Property>();
    }
    this.properties.add(propertiesItem);
    return this;
  }

  public List<Property> getProperties() {
    return properties;
  }

  public void setProperties(List<Property> properties) {
    this.properties = properties;
  }
   */

  public Object getProperties() {
    return properties;
  }

  public void setProperties(Object properties) {
    this.properties = properties;
  }

  public SimpleFeature descriptor(AttributeDescriptor descriptor) {
    this.descriptor = descriptor;
    return this;
  }

   /**
   * Get descriptor
   * @return descriptor
  **/
  @ApiModelProperty(value = "")
  public AttributeDescriptor getDescriptor() {
    return descriptor;
  }

  public void setDescriptor(AttributeDescriptor descriptor) {
    this.descriptor = descriptor;
  }

  public SimpleFeature nillable(Boolean nillable) {
    this.nillable = nillable;
    return this;
  }

   /**
   * Get nillable
   * @return nillable
  **/
  @ApiModelProperty(value = "")
  public Boolean isNillable() {
    return nillable;
  }

  public void setNillable(Boolean nillable) {
    this.nillable = nillable;
  }

  public SimpleFeature userData(Map<String, Object> userData) {
    this.userData = userData;
    return this;
  }

  public SimpleFeature putUserDataItem(String key, Object userDataItem) {
    if (this.userData == null) {
      this.userData = new HashMap<String, Object>();
    }
    this.userData.put(key, userDataItem);
    return this;
  }

   /**
   * Get userData
   * @return userData
  **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getUserData() {
    return userData;
  }

  public void setUserData(Map<String, Object> userData) {
    this.userData = userData;
  }

  public SimpleFeature name(Name name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public Name getName() {
    return name;
  }

  public void setName(Name name) {
    this.name = name;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimpleFeature simpleFeature = (SimpleFeature) o;
    return Objects.equals(this.featureType, simpleFeature.featureType) &&
        //Objects.equals(this.defaultGeometry, simpleFeature.defaultGeometry) &&
        Objects.equals(this.geometry, simpleFeature.geometry) &&
        Objects.equals(this.attributes, simpleFeature.attributes) &&
        Objects.equals(this.attributeCount, simpleFeature.attributeCount) &&
        Objects.equals(this.type, simpleFeature.type) &&
        Objects.equals(this.id, simpleFeature.id) &&
        Objects.equals(this.defaultGeometryProperty, simpleFeature.defaultGeometryProperty) &&
        Objects.equals(this.bounds, simpleFeature.bounds) &&
        Objects.equals(this.identifier, simpleFeature.identifier) &&
        Objects.equals(this.value, simpleFeature.value) &&
        Objects.equals(this.properties, simpleFeature.properties) &&
        Objects.equals(this.descriptor, simpleFeature.descriptor) &&
        Objects.equals(this.nillable, simpleFeature.nillable) &&
        Objects.equals(this.userData, simpleFeature.userData) &&
        Objects.equals(this.name, simpleFeature.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(featureType, geometry, attributes, attributeCount, type, id, defaultGeometryProperty, bounds, identifier, value, properties, descriptor, nillable, userData, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimpleFeature {\n");

    sb.append("    featureType: ").append(toIndentedString(featureType)).append("\n");
    //sb.append("    defaultGeometry: ").append(toIndentedString(defaultGeometry)).append("\n");
    sb.append("    geometry: ").append(toIndentedString(geometry)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    attributeCount: ").append(toIndentedString(attributeCount)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    defaultGeometryProperty: ").append(toIndentedString(defaultGeometryProperty)).append("\n");
    sb.append("    bounds: ").append(toIndentedString(bounds)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    descriptor: ").append(toIndentedString(descriptor)).append("\n");
    sb.append("    nillable: ").append(toIndentedString(nillable)).append("\n");
    sb.append("    userData: ").append(toIndentedString(userData)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}