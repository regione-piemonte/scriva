/*-
 * ========================LICENSE_START=================================
 * 
 * Copyright (C) 2025 Regione Piemonte
 * 
 * SPDX-FileCopyrightText: (C) Copyright 2025 Regione Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * ricerca-fulltext-geografica
 * Servizi di ricerca full text con localizzazione geografica
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.scriva.scrivabesrv.business.be.helper.loccsi.dto;

import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Extent
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-02-24T08:29:11.008Z")
public class Extent {
  private List<GeographicExtent> geographicElements = null;

  private List<TemporalExtent> temporalElements = null;

  private List<VerticalExtent> verticalElements = null;

  private InternationalString description = null;

  public Extent geographicElements(List<GeographicExtent> geographicElements) {
    this.geographicElements = geographicElements;
    return this;
  }

  public Extent addGeographicElementsItem(GeographicExtent geographicElementsItem) {
    if (this.geographicElements == null) {
      this.geographicElements = new ArrayList<GeographicExtent>();
    }
    this.geographicElements.add(geographicElementsItem);
    return this;
  }

   /**
   * Get geographicElements
   * @return geographicElements
  **/
  @ApiModelProperty(value = "")
  public List<GeographicExtent> getGeographicElements() {
    return geographicElements;
  }

  public void setGeographicElements(List<GeographicExtent> geographicElements) {
    this.geographicElements = geographicElements;
  }

  public Extent temporalElements(List<TemporalExtent> temporalElements) {
    this.temporalElements = temporalElements;
    return this;
  }

  public Extent addTemporalElementsItem(TemporalExtent temporalElementsItem) {
    if (this.temporalElements == null) {
      this.temporalElements = new ArrayList<TemporalExtent>();
    }
    this.temporalElements.add(temporalElementsItem);
    return this;
  }

   /**
   * Get temporalElements
   * @return temporalElements
  **/
  @ApiModelProperty(value = "")
  public List<TemporalExtent> getTemporalElements() {
    return temporalElements;
  }

  public void setTemporalElements(List<TemporalExtent> temporalElements) {
    this.temporalElements = temporalElements;
  }

  public Extent verticalElements(List<VerticalExtent> verticalElements) {
    this.verticalElements = verticalElements;
    return this;
  }

  public Extent addVerticalElementsItem(VerticalExtent verticalElementsItem) {
    if (this.verticalElements == null) {
      this.verticalElements = new ArrayList<VerticalExtent>();
    }
    this.verticalElements.add(verticalElementsItem);
    return this;
  }

   /**
   * Get verticalElements
   * @return verticalElements
  **/
  @ApiModelProperty(value = "")
  public List<VerticalExtent> getVerticalElements() {
    return verticalElements;
  }

  public void setVerticalElements(List<VerticalExtent> verticalElements) {
    this.verticalElements = verticalElements;
  }

  public Extent description(InternationalString description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public InternationalString getDescription() {
    return description;
  }

  public void setDescription(InternationalString description) {
    this.description = description;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Extent extent = (Extent) o;
    return Objects.equals(this.geographicElements, extent.geographicElements) &&
        Objects.equals(this.temporalElements, extent.temporalElements) &&
        Objects.equals(this.verticalElements, extent.verticalElements) &&
        Objects.equals(this.description, extent.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(geographicElements, temporalElements, verticalElements, description);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Extent {\n");

    sb.append("    geographicElements: ").append(toIndentedString(geographicElements)).append("\n");
    sb.append("    temporalElements: ").append(toIndentedString(temporalElements)).append("\n");
    sb.append("    verticalElements: ").append(toIndentedString(verticalElements)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}