/*-
 * ========================LICENSE_START=================================
 * 
 * Copyright (C) 2025 Regione Piemonte
 * 
 * SPDX-FileCopyrightText: (C) Copyright 2025 Regione Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * ricerca-fulltext-geografica
 * Servizi di ricerca full text con localizzazione geografica
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.scriva.scrivabesrv.business.be.helper.loccsi.dto;

import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * VerticalCRS
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-02-24T08:29:11.008Z")
public class VerticalCRS {
  private VerticalCS coordinateSystem = null;

  private VerticalDatum datum = null;

  private Extent domainOfValidity = null;

  private InternationalString scope = null;

  private List<GenericName> alias = null;

  private InternationalString remarks = null;

  private List<ReferenceIdentifier> identifiers = null;

  private ReferenceIdentifier name = null;

  public VerticalCRS coordinateSystem(VerticalCS coordinateSystem) {
    this.coordinateSystem = coordinateSystem;
    return this;
  }

   /**
   * Get coordinateSystem
   * @return coordinateSystem
  **/
  @ApiModelProperty(value = "")
  public VerticalCS getCoordinateSystem() {
    return coordinateSystem;
  }

  public void setCoordinateSystem(VerticalCS coordinateSystem) {
    this.coordinateSystem = coordinateSystem;
  }

  public VerticalCRS datum(VerticalDatum datum) {
    this.datum = datum;
    return this;
  }

   /**
   * Get datum
   * @return datum
  **/
  @ApiModelProperty(value = "")
  public VerticalDatum getDatum() {
    return datum;
  }

  public void setDatum(VerticalDatum datum) {
    this.datum = datum;
  }

  public VerticalCRS domainOfValidity(Extent domainOfValidity) {
    this.domainOfValidity = domainOfValidity;
    return this;
  }

   /**
   * Get domainOfValidity
   * @return domainOfValidity
  **/
  @ApiModelProperty(value = "")
  public Extent getDomainOfValidity() {
    return domainOfValidity;
  }

  public void setDomainOfValidity(Extent domainOfValidity) {
    this.domainOfValidity = domainOfValidity;
  }

  public VerticalCRS scope(InternationalString scope) {
    this.scope = scope;
    return this;
  }

   /**
   * Get scope
   * @return scope
  **/
  @ApiModelProperty(value = "")
  public InternationalString getScope() {
    return scope;
  }

  public void setScope(InternationalString scope) {
    this.scope = scope;
  }

  public VerticalCRS alias(List<GenericName> alias) {
    this.alias = alias;
    return this;
  }

  public VerticalCRS addAliasItem(GenericName aliasItem) {
    if (this.alias == null) {
      this.alias = new ArrayList<GenericName>();
    }
    this.alias.add(aliasItem);
    return this;
  }

   /**
   * Get alias
   * @return alias
  **/
  @ApiModelProperty(value = "")
  public List<GenericName> getAlias() {
    return alias;
  }

  public void setAlias(List<GenericName> alias) {
    this.alias = alias;
  }

  public VerticalCRS remarks(InternationalString remarks) {
    this.remarks = remarks;
    return this;
  }

   /**
   * Get remarks
   * @return remarks
  **/
  @ApiModelProperty(value = "")
  public InternationalString getRemarks() {
    return remarks;
  }

  public void setRemarks(InternationalString remarks) {
    this.remarks = remarks;
  }

  public VerticalCRS identifiers(List<ReferenceIdentifier> identifiers) {
    this.identifiers = identifiers;
    return this;
  }

  public VerticalCRS addIdentifiersItem(ReferenceIdentifier identifiersItem) {
    if (this.identifiers == null) {
      this.identifiers = new ArrayList<ReferenceIdentifier>();
    }
    this.identifiers.add(identifiersItem);
    return this;
  }

   /**
   * Get identifiers
   * @return identifiers
  **/
  @ApiModelProperty(value = "")
  public List<ReferenceIdentifier> getIdentifiers() {
    return identifiers;
  }

  public void setIdentifiers(List<ReferenceIdentifier> identifiers) {
    this.identifiers = identifiers;
  }

  public VerticalCRS name(ReferenceIdentifier name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public ReferenceIdentifier getName() {
    return name;
  }

  public void setName(ReferenceIdentifier name) {
    this.name = name;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VerticalCRS verticalCRS = (VerticalCRS) o;
    return Objects.equals(this.coordinateSystem, verticalCRS.coordinateSystem) &&
        Objects.equals(this.datum, verticalCRS.datum) &&
        Objects.equals(this.domainOfValidity, verticalCRS.domainOfValidity) &&
        Objects.equals(this.scope, verticalCRS.scope) &&
        Objects.equals(this.alias, verticalCRS.alias) &&
        Objects.equals(this.remarks, verticalCRS.remarks) &&
        Objects.equals(this.identifiers, verticalCRS.identifiers) &&
        Objects.equals(this.name, verticalCRS.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(coordinateSystem, datum, domainOfValidity, scope, alias, remarks, identifiers, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VerticalCRS {\n");

    sb.append("    coordinateSystem: ").append(toIndentedString(coordinateSystem)).append("\n");
    sb.append("    datum: ").append(toIndentedString(datum)).append("\n");
    sb.append("    domainOfValidity: ").append(toIndentedString(domainOfValidity)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
    sb.append("    remarks: ").append(toIndentedString(remarks)).append("\n");
    sb.append("    identifiers: ").append(toIndentedString(identifiers)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}