/*-
 * ========================LICENSE_START=================================
 * 
 * Copyright (C) 2025 Regione Piemonte
 * 
 * SPDX-FileCopyrightText: (C) Copyright 2025 Regione Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * ECMEngine
 * Servizi di fruizione ECM INDEX.
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.scriva.scrivabesrv.business.be.helper.index.dto;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Descrittore del modello dei dati.
 */
@ApiModel(description = "Descrittore del modello dei dati.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-03-29T13:41:28.556Z")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class ModelDescriptor {
    @JsonProperty("prefixedName")
    private String prefixedName = null;

    @JsonProperty("title")
    private String title = null;

    @JsonProperty("description")
    private String description = null;

    /**
     * Prefixed name model descriptor.
     *
     * @param prefixedName the prefixed name
     * @return the model descriptor
     */
    public ModelDescriptor prefixedName(String prefixedName) {
        this.prefixedName = prefixedName;
        return this;
    }

    /**
     * Prefixed name dell&#39;elemento.
     *
     * @return prefixedName prefixed name
     */
    @ApiModelProperty(example = "cm:contentmodel", value = "Prefixed name dell'elemento.")
    public String getPrefixedName() {
        return prefixedName;
    }

    /**
     * Sets prefixed name.
     *
     * @param prefixedName the prefixed name
     */
    public void setPrefixedName(String prefixedName) {
        this.prefixedName = prefixedName;
    }

    /**
     * Title model descriptor.
     *
     * @param title the title
     * @return the model descriptor
     */
    public ModelDescriptor title(String title) {
        this.title = title;
        return this;
    }

    /**
     * Titolo dell&#39;elemento.
     *
     * @return title title
     */
    @ApiModelProperty(value = "Titolo dell'elemento.")
    public String getTitle() {
        return title;
    }

    /**
     * Sets title.
     *
     * @param title the title
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Description model descriptor.
     *
     * @param description the description
     * @return the model descriptor
     */
    public ModelDescriptor description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Descrizione dell&#39;elemento.
     *
     * @return description description
     */
    @ApiModelProperty(example = "Alfresco Content Domain Model", value = "Descrizione dell'elemento.")
    public String getDescription() {
        return description;
    }

    /**
     * Sets description.
     *
     * @param description the description
     */
    public void setDescription(String description) {
        this.description = description;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ModelDescriptor modelDescriptor = (ModelDescriptor) o;
        return Objects.equals(this.prefixedName, modelDescriptor.prefixedName) &&
                Objects.equals(this.title, modelDescriptor.title) &&
                Objects.equals(this.description, modelDescriptor.description);
    }

    @Override
    public int hashCode() {
        return Objects.hash(prefixedName, title, description);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ModelDescriptor {\n");

        sb.append("    prefixedName: ").append(toIndentedString(prefixedName)).append("\n");
        sb.append("    title: ").append(toIndentedString(title)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}