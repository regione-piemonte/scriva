/*-
 * ========================LICENSE_START=================================
 * 
 * Copyright (C) 2025 Regione Piemonte
 * 
 * SPDX-FileCopyrightText: (C) Copyright 2025 Regione Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * ECMEngine
 * Servizi di fruizione ECM INDEX.
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.scriva.scrivabesrv.business.be.helper.index.dto;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Contiene le informazioni di autenticazione da utilizzare per l&#39;invocazione dei servizi.
 */
@ApiModel(description = "Contiene le informazioni di autenticazione da utilizzare per l'invocazione dei servizi.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-03-29T13:41:28.556Z")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class OperationContext {
    @JsonProperty("username")
    private String username = null;

    @JsonProperty("password")
    private String password = null;

    @JsonProperty("repository")
    private String repository = null;

    @JsonProperty("tenant")
    private String tenant = null;

    @JsonProperty("fruitore")
    private String fruitore = null;

    @JsonProperty("nomeFisico")
    private String nomeFisico = null;

    /**
     * Username operation context.
     *
     * @param username the username
     * @return the operation context
     */
    public OperationContext username(String username) {
        this.username = username;
        return this;
    }

    /**
     * Username dell&#39;utente applicativo.
     *
     * @return username username
     */
    @ApiModelProperty(example = "user", value = "Username dell'utente applicativo.")
    public String getUsername() {
        return username;
    }

    /**
     * Sets username.
     *
     * @param username the username
     */
    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * Password operation context.
     *
     * @param password the password
     * @return the operation context
     */
    public OperationContext password(String password) {
        this.password = password;
        return this;
    }

    /**
     * Password dell&#39;utente applicativo.
     *
     * @return password password
     */
    @ApiModelProperty(example = "12345", value = "Password dell'utente applicativo.")
    public String getPassword() {
        return password;
    }

    /**
     * Sets password.
     *
     * @param password the password
     */
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Repository operation context.
     *
     * @param repository the repository
     * @return the operation context
     */
    public OperationContext repository(String repository) {
        this.repository = repository;
        return this;
    }

    /**
     * Repository fisico (primary o secondary).
     *
     * @return repository repository
     */
    @ApiModelProperty(example = "primary", value = "Repository fisico (primary o secondary).")
    public String getRepository() {
        return repository;
    }

    /**
     * Sets repository.
     *
     * @param repository the repository
     */
    public void setRepository(String repository) {
        this.repository = repository;
    }

    /**
     * Tenant operation context.
     *
     * @param tenant the tenant
     * @return the operation context
     */
    public OperationContext tenant(String tenant) {
        this.tenant = tenant;
        return this;
    }

    /**
     * Tenant di destinazione.
     *
     * @return tenant tenant
     */
    @ApiModelProperty(example = "test", value = "Tenant di destinazione.")
    public String getTenant() {
        return tenant;
    }

    /**
     * Sets tenant.
     *
     * @param tenant the tenant
     */
    public void setTenant(String tenant) {
        this.tenant = tenant;
    }

    /**
     * Fruitore operation context.
     *
     * @param fruitore the fruitore
     * @return the operation context
     */
    public OperationContext fruitore(String fruitore) {
        this.fruitore = fruitore;
        return this;
    }

    /**
     * Get fruitore
     *
     * @return fruitore fruitore
     */
    @ApiModelProperty(example = "test", value = "")
    public String getFruitore() {
        return fruitore;
    }

    /**
     * Sets fruitore.
     *
     * @param fruitore the fruitore
     */
    public void setFruitore(String fruitore) {
        this.fruitore = fruitore;
    }

    /**
     * Nome fisico operation context.
     *
     * @param nomeFisico the nome fisico
     * @return the operation context
     */
    public OperationContext nomeFisico(String nomeFisico) {
        this.nomeFisico = nomeFisico;
        return this;
    }

    /**
     * Get nomeFisico
     *
     * @return nomeFisico nome fisico
     */
    @ApiModelProperty(example = "admin@TEST", value = "")
    public String getNomeFisico() {
        return nomeFisico;
    }

    /**
     * Sets nome fisico.
     *
     * @param nomeFisico the nome fisico
     */
    public void setNomeFisico(String nomeFisico) {
        this.nomeFisico = nomeFisico;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OperationContext operationContext = (OperationContext) o;
        return Objects.equals(this.username, operationContext.username) &&
                Objects.equals(this.password, operationContext.password) &&
                Objects.equals(this.repository, operationContext.repository) &&
                Objects.equals(this.tenant, operationContext.tenant) &&
                Objects.equals(this.fruitore, operationContext.fruitore) &&
                Objects.equals(this.nomeFisico, operationContext.nomeFisico);
    }

    @Override
    public int hashCode() {
        return Objects.hash(username, password, repository, tenant, fruitore, nomeFisico);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OperationContext {\n");

        sb.append("    username: ").append(toIndentedString(username)).append("\n");
        sb.append("    password: ").append(toIndentedString(password)).append("\n");
        sb.append("    repository: ").append(toIndentedString(repository)).append("\n");
        sb.append("    tenant: ").append(toIndentedString(tenant)).append("\n");
        sb.append("    fruitore: ").append(toIndentedString(fruitore)).append("\n");
        sb.append("    nomeFisico: ").append(toIndentedString(nomeFisico)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}