/*-
 * ========================LICENSE_START=================================
 * 
 * Copyright (C) 2025 Regione Piemonte
 * 
 * SPDX-FileCopyrightText: (C) Copyright 2025 Regione Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * ECMEngine
 * Servizi di fruizione ECM INDEX.
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.scriva.scrivabesrv.business.be.helper.index.dto;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Rapporto di verifica della firma digitale di un documento.
 */
@ApiModel(description = "Rapporto di verifica della firma digitale di un documento.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-03-29T13:41:28.556Z")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class VerifyReport {
    @JsonProperty("child")
    private VerifyReport child = null;

    @JsonProperty("conformitaParametriInput")
    private Integer conformitaParametriInput = null;

    @JsonProperty("date")
    private String date = null;

    @JsonProperty("errorCode")
    private Integer errorCode = null;

    @JsonProperty("formatoFirma")
    private Integer formatoFirma = null;

    @JsonProperty("numCertificatiFirma")
    private Integer numCertificatiFirma = null;

    @JsonProperty("numCertificatiMarca")
    private Integer numCertificatiMarca = null;

    @JsonProperty("signature")
    private List<Signature> signature = null;

    @JsonProperty("tipoFirma")
    private Integer tipoFirma = null;

    @JsonProperty("uid")
    private List<String> uid = null;

    /**
     * Child verify report.
     *
     * @param child the child
     * @return the verify report
     */
    public VerifyReport child(VerifyReport child) {
        this.child = child;
        return this;
    }

    /**
     * Get child
     *
     * @return child child
     */
    @ApiModelProperty(value = "")
    public VerifyReport getChild() {
        return child;
    }

    /**
     * Sets child.
     *
     * @param child the child
     */
    public void setChild(VerifyReport child) {
        this.child = child;
    }

    /**
     * Conformita parametri input verify report.
     *
     * @param conformitaParametriInput the conformita parametri input
     * @return the verify report
     */
    public VerifyReport conformitaParametriInput(Integer conformitaParametriInput) {
        this.conformitaParametriInput = conformitaParametriInput;
        return this;
    }

    /**
     * Conformita dei parametri di input:  0 NON OK 1 OK
     *
     * @return conformitaParametriInput conformita parametri input
     */
    @ApiModelProperty(example = "0", value = "Conformita dei parametri di input:  0 NON OK 1 OK ")
    public Integer getConformitaParametriInput() {
        return conformitaParametriInput;
    }

    /**
     * Sets conformita parametri input.
     *
     * @param conformitaParametriInput the conformita parametri input
     */
    public void setConformitaParametriInput(Integer conformitaParametriInput) {
        this.conformitaParametriInput = conformitaParametriInput;
    }

    /**
     * Date verify report.
     *
     * @param date the date
     * @return the verify report
     */
    public VerifyReport date(String date) {
        this.date = date;
        return this;
    }

    /**
     * Data in cui è stato chiesto il rapporto di verifica.
     *
     * @return date date
     */
    @ApiModelProperty(example = "", value = "Data in cui è stato chiesto il rapporto di verifica.")
    public String getDate() {
        return date;
    }

    /**
     * Sets date.
     *
     * @param date the date
     */
    public void setDate(String date) {
        this.date = date;
    }

    /**
     * Error code verify report.
     *
     * @param errorCode the error code
     * @return the verify report
     */
    public VerifyReport errorCode(Integer errorCode) {
        this.errorCode = errorCode;
        return this;
    }

    /**
     * Eventuale codice di errore : viene restituito  0 se il processo si è concluso correttamente  altrimenti un valore da 1 a 7 in caso di fallimento di uno dei sette passi.    &gt;      1: Verifica conformità e integrità busta crittografica.      2: Sbustamento busta crittografica.      3: Verifica consistenza firma.      4: Verifica validità certificato.      5: Verifica certification authority.      6: Verifica lista di revoca — CRL aggiornata non disponibile.      7: Verifica lista di revoca — certificato presente nella CRL.
     *
     * @return errorCode error code
     */
    @ApiModelProperty(example = "1", value = "Eventuale codice di errore : viene restituito  0 se il processo si è concluso correttamente  altrimenti un valore da 1 a 7 in caso di fallimento di uno dei sette passi.    >      1: Verifica conformità e integrità busta crittografica.      2: Sbustamento busta crittografica.      3: Verifica consistenza firma.      4: Verifica validità certificato.      5: Verifica certification authority.      6: Verifica lista di revoca — CRL aggiornata non disponibile.      7: Verifica lista di revoca — certificato presente nella CRL. ")
    public Integer getErrorCode() {
        return errorCode;
    }

    /**
     * Sets error code.
     *
     * @param errorCode the error code
     */
    public void setErrorCode(Integer errorCode) {
        this.errorCode = errorCode;
    }

    /**
     * Formato firma verify report.
     *
     * @param formatoFirma the formato firma
     * @return the verify report
     */
    public VerifyReport formatoFirma(Integer formatoFirma) {
        this.formatoFirma = formatoFirma;
        return this;
    }

    /**
     * Formato della firma:  1 in caso di firma enveloped 2 in caso di firma separata 3 in caso di marca temporale InfoCert  4 in caso di marca temporale separata
     *
     * @return formatoFirma formato firma
     */
    @ApiModelProperty(example = "1", value = "Formato della firma:  1 in caso di firma enveloped 2 in caso di firma separata 3 in caso di marca temporale InfoCert  4 in caso di marca temporale separata ")
    public Integer getFormatoFirma() {
        return formatoFirma;
    }

    /**
     * Sets formato firma.
     *
     * @param formatoFirma the formato firma
     */
    public void setFormatoFirma(Integer formatoFirma) {
        this.formatoFirma = formatoFirma;
    }

    /**
     * Num certificati firma verify report.
     *
     * @param numCertificatiFirma the num certificati firma
     * @return the verify report
     */
    public VerifyReport numCertificatiFirma(Integer numCertificatiFirma) {
        this.numCertificatiFirma = numCertificatiFirma;
        return this;
    }

    /**
     * Numero dei certificati della firma.
     *
     * @return numCertificatiFirma num certificati firma
     */
    @ApiModelProperty(example = "5", value = "Numero dei certificati della firma.")
    public Integer getNumCertificatiFirma() {
        return numCertificatiFirma;
    }

    /**
     * Sets num certificati firma.
     *
     * @param numCertificatiFirma the num certificati firma
     */
    public void setNumCertificatiFirma(Integer numCertificatiFirma) {
        this.numCertificatiFirma = numCertificatiFirma;
    }

    /**
     * Num certificati marca verify report.
     *
     * @param numCertificatiMarca the num certificati marca
     * @return the verify report
     */
    public VerifyReport numCertificatiMarca(Integer numCertificatiMarca) {
        this.numCertificatiMarca = numCertificatiMarca;
        return this;
    }

    /**
     * Numero dei certificati della marca temporale.
     *
     * @return numCertificatiMarca num certificati marca
     */
    @ApiModelProperty(example = "5", value = "Numero dei certificati della marca temporale.")
    public Integer getNumCertificatiMarca() {
        return numCertificatiMarca;
    }

    /**
     * Sets num certificati marca.
     *
     * @param numCertificatiMarca the num certificati marca
     */
    public void setNumCertificatiMarca(Integer numCertificatiMarca) {
        this.numCertificatiMarca = numCertificatiMarca;
    }

    /**
     * Signature verify report.
     *
     * @param signature the signature
     * @return the verify report
     */
    public VerifyReport signature(List<Signature> signature) {
        this.signature = signature;
        return this;
    }

    /**
     * Add signature item verify report.
     *
     * @param signatureItem the signature item
     * @return the verify report
     */
    public VerifyReport addSignatureItem(Signature signatureItem) {
        if (this.signature == null) {
            this.signature = new ArrayList<Signature>();
        }
        this.signature.add(signatureItem);
        return this;
    }

    /**
     * Firme del file.
     *
     * @return signature signature
     */
    @ApiModelProperty(value = "Firme del file.")
    public List<Signature> getSignature() {
        return signature;
    }

    /**
     * Sets signature.
     *
     * @param signature the signature
     */
    public void setSignature(List<Signature> signature) {
        this.signature = signature;
    }

    /**
     * Tipo firma verify report.
     *
     * @param tipoFirma the tipo firma
     * @return the verify report
     */
    public VerifyReport tipoFirma(Integer tipoFirma) {
        this.tipoFirma = tipoFirma;
        return this;
    }

    /**
     * Tipologia di firma o marca temporale:  0 in caso di marca temporale 1 in caso di firma semplice 2 in caso di firma multipla parallela  3 in caso di firma multipla controfirma 4 in caso di firma multipla a catena
     *
     * @return tipoFirma tipo firma
     */
    @ApiModelProperty(example = "1", value = "Tipologia di firma o marca temporale:  0 in caso di marca temporale 1 in caso di firma semplice 2 in caso di firma multipla parallela  3 in caso di firma multipla controfirma 4 in caso di firma multipla a catena ")
    public Integer getTipoFirma() {
        return tipoFirma;
    }

    /**
     * Sets tipo firma.
     *
     * @param tipoFirma the tipo firma
     */
    public void setTipoFirma(Integer tipoFirma) {
        this.tipoFirma = tipoFirma;
    }

    /**
     * Uid verify report.
     *
     * @param uid the uid
     * @return the verify report
     */
    public VerifyReport uid(List<String> uid) {
        this.uid = uid;
        return this;
    }

    /**
     * Add uid item verify report.
     *
     * @param uidItem the uid item
     * @return the verify report
     */
    public VerifyReport addUidItem(String uidItem) {
        if (this.uid == null) {
            this.uid = new ArrayList<String>();
        }
        this.uid.add(uidItem);
        return this;
    }

    /**
     * Eventuale UID del file.
     *
     * @return uid uid
     */
    @ApiModelProperty(value = "Eventuale UID del file.")
    public List<String> getUid() {
        return uid;
    }

    /**
     * Sets uid.
     *
     * @param uid the uid
     */
    public void setUid(List<String> uid) {
        this.uid = uid;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        VerifyReport verifyReport = (VerifyReport) o;
        return Objects.equals(this.child, verifyReport.child) &&
                Objects.equals(this.conformitaParametriInput, verifyReport.conformitaParametriInput) &&
                Objects.equals(this.date, verifyReport.date) &&
                Objects.equals(this.errorCode, verifyReport.errorCode) &&
                Objects.equals(this.formatoFirma, verifyReport.formatoFirma) &&
                Objects.equals(this.numCertificatiFirma, verifyReport.numCertificatiFirma) &&
                Objects.equals(this.numCertificatiMarca, verifyReport.numCertificatiMarca) &&
                Objects.equals(this.signature, verifyReport.signature) &&
                Objects.equals(this.tipoFirma, verifyReport.tipoFirma) &&
                Objects.equals(this.uid, verifyReport.uid);
    }

    @Override
    public int hashCode() {
        return Objects.hash(child, conformitaParametriInput, date, errorCode, formatoFirma, numCertificatiFirma, numCertificatiMarca, signature, tipoFirma, uid);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class VerifyReport {\n");

        sb.append("    child: ").append(toIndentedString(child)).append("\n");
        sb.append("    conformitaParametriInput: ").append(toIndentedString(conformitaParametriInput)).append("\n");
        sb.append("    date: ").append(toIndentedString(date)).append("\n");
        sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
        sb.append("    formatoFirma: ").append(toIndentedString(formatoFirma)).append("\n");
        sb.append("    numCertificatiFirma: ").append(toIndentedString(numCertificatiFirma)).append("\n");
        sb.append("    numCertificatiMarca: ").append(toIndentedString(numCertificatiMarca)).append("\n");
        sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
        sb.append("    tipoFirma: ").append(toIndentedString(tipoFirma)).append("\n");
        sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}