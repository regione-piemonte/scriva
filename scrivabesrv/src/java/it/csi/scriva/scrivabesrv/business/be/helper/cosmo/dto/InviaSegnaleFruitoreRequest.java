/*-
 * ========================LICENSE_START=================================
 * 
 * Copyright (C) 2025 Regione Piemonte
 * 
 * SPDX-FileCopyrightText: (C) Copyright 2025 Regione Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * cosmo-servizi-fruitori-xp
 * API esposte da Cosmo per l'integrazione con i fruitori esterni
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.scriva.scrivabesrv.business.be.helper.cosmo.dto;

import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * InviaSegnaleFruitoreRequest
 */
public class InviaSegnaleFruitoreRequest {
    private String codiceSegnale = null;

    private Boolean richiediCallback = null;

    private List<InviaSegnaleFruitoreVariabileRequest> variabili = null;

    public InviaSegnaleFruitoreRequest codiceSegnale(String codiceSegnale) {
        this.codiceSegnale = codiceSegnale;
        return this;
    }

    /**
     * Get codiceSegnale
     *
     * @return codiceSegnale
     **/
    @ApiModelProperty(required = true, value = "")
    public String getCodiceSegnale() {
        return codiceSegnale;
    }

    public void setCodiceSegnale(String codiceSegnale) {
        this.codiceSegnale = codiceSegnale;
    }

    public InviaSegnaleFruitoreRequest richiediCallback(Boolean richiediCallback) {
        this.richiediCallback = richiediCallback;
        return this;
    }

    /**
     * Get richiediCallback
     *
     * @return richiediCallback
     **/
    @ApiModelProperty(value = "")
    public Boolean isRichiediCallback() {
        return richiediCallback;
    }

    public void setRichiediCallback(Boolean richiediCallback) {
        this.richiediCallback = richiediCallback;
    }

    public InviaSegnaleFruitoreRequest variabili(List<InviaSegnaleFruitoreVariabileRequest> variabili) {
        this.variabili = variabili;
        return this;
    }

    public InviaSegnaleFruitoreRequest addVariabiliItem(InviaSegnaleFruitoreVariabileRequest variabiliItem) {
        if (this.variabili == null) {
            this.variabili = new ArrayList<InviaSegnaleFruitoreVariabileRequest>();
        }
        this.variabili.add(variabiliItem);
        return this;
    }

    /**
     * Get variabili
     *
     * @return variabili
     **/
    @ApiModelProperty(value = "")
    public List<InviaSegnaleFruitoreVariabileRequest> getVariabili() {
        return variabili;
    }

    public void setVariabili(List<InviaSegnaleFruitoreVariabileRequest> variabili) {
        this.variabili = variabili;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        InviaSegnaleFruitoreRequest inviaSegnaleFruitoreRequest = (InviaSegnaleFruitoreRequest) o;
        return Objects.equals(this.codiceSegnale, inviaSegnaleFruitoreRequest.codiceSegnale) &&
                Objects.equals(this.richiediCallback, inviaSegnaleFruitoreRequest.richiediCallback) &&
                Objects.equals(this.variabili, inviaSegnaleFruitoreRequest.variabili);
    }

    @Override
    public int hashCode() {
        return Objects.hash(codiceSegnale, richiediCallback, variabili);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class InviaSegnaleFruitoreRequest {\n");

        sb.append("    codiceSegnale: ").append(toIndentedString(codiceSegnale)).append("\n");
        sb.append("    richiediCallback: ").append(toIndentedString(richiediCallback)).append("\n");
        sb.append("    variabili: ").append(toIndentedString(variabili)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}