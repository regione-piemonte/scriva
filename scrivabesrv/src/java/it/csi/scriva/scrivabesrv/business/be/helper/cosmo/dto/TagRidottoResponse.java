/*-
 * ========================LICENSE_START=================================
 * 
 * Copyright (C) 2025 Regione Piemonte
 * 
 * SPDX-FileCopyrightText: (C) Copyright 2025 Regione Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * cosmo-servizi-fruitori
 * API esposte da Cosmo per l'integrazione con i fruitori esterni
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.scriva.scrivabesrv.business.be.helper.cosmo.dto;

import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * TagRidottoResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-10-03T14:55:11.012Z")
public class TagRidottoResponse {
    private String codice = null;

    private String descrizione = null;

    private TipoTag tipoTag = null;

    private String warning = null;

    public TagRidottoResponse codice(String codice) {
        this.codice = codice;
        return this;
    }

    /**
     * Get codice
     *
     * @return codice
     **/
    @ApiModelProperty(required = true, value = "")
    public String getCodice() {
        return codice;
    }

    public void setCodice(String codice) {
        this.codice = codice;
    }

    public TagRidottoResponse descrizione(String descrizione) {
        this.descrizione = descrizione;
        return this;
    }

    /**
     * Get descrizione
     *
     * @return descrizione
     **/
    @ApiModelProperty(value = "")
    public String getDescrizione() {
        return descrizione;
    }

    public void setDescrizione(String descrizione) {
        this.descrizione = descrizione;
    }

    public TagRidottoResponse tipoTag(TipoTag tipoTag) {
        this.tipoTag = tipoTag;
        return this;
    }

    /**
     * Get tipoTag
     *
     * @return tipoTag
     **/
    @ApiModelProperty(required = true, value = "")
    public TipoTag getTipoTag() {
        return tipoTag;
    }

    public void setTipoTag(TipoTag tipoTag) {
        this.tipoTag = tipoTag;
    }

    public TagRidottoResponse warning(String warning) {
        this.warning = warning;
        return this;
    }

    /**
     * Get warning
     *
     * @return warning
     **/
    @ApiModelProperty(value = "")
    public String getWarning() {
        return warning;
    }

    public void setWarning(String warning) {
        this.warning = warning;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TagRidottoResponse tagRidottoResponse = (TagRidottoResponse) o;
        return Objects.equals(this.codice, tagRidottoResponse.codice) &&
                Objects.equals(this.descrizione, tagRidottoResponse.descrizione) &&
                Objects.equals(this.tipoTag, tagRidottoResponse.tipoTag) &&
                Objects.equals(this.warning, tagRidottoResponse.warning);
    }

    @Override
    public int hashCode() {
        return Objects.hash(codice, descrizione, tipoTag, warning);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class TagRidottoResponse {\n");

        sb.append("    codice: ").append(toIndentedString(codice)).append("\n");
        sb.append("    descrizione: ").append(toIndentedString(descrizione)).append("\n");
        sb.append("    tipoTag: ").append(toIndentedString(tipoTag)).append("\n");
        sb.append("    warning: ").append(toIndentedString(warning)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}