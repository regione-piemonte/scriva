/*-
 * ========================LICENSE_START=================================
 * 
 * Copyright (C) 2025 Regione Piemonte
 * 
 * SPDX-FileCopyrightText: (C) Copyright 2025 Regione Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * ricerca-fulltext-geografica
 * Servizi di ricerca full text con localizzazione geografica
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.scriva.scrivabesrv.business.be.helper.loccsi.dto;

import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Contact
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-02-24T08:29:11.008Z")
public class Contact {
  private Telephone phone = null;

  private OnLineResource onLineResource = null;

  private InternationalString hoursOfService = null;

  private InternationalString contactInstructions = null;

  private Address address = null;

  public Contact phone(Telephone phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @ApiModelProperty(value = "")
  public Telephone getPhone() {
    return phone;
  }

  public void setPhone(Telephone phone) {
    this.phone = phone;
  }

  public Contact onLineResource(OnLineResource onLineResource) {
    this.onLineResource = onLineResource;
    return this;
  }

   /**
   * Get onLineResource
   * @return onLineResource
  **/
  @ApiModelProperty(value = "")
  public OnLineResource getOnLineResource() {
    return onLineResource;
  }

  public void setOnLineResource(OnLineResource onLineResource) {
    this.onLineResource = onLineResource;
  }

  public Contact hoursOfService(InternationalString hoursOfService) {
    this.hoursOfService = hoursOfService;
    return this;
  }

   /**
   * Get hoursOfService
   * @return hoursOfService
  **/
  @ApiModelProperty(value = "")
  public InternationalString getHoursOfService() {
    return hoursOfService;
  }

  public void setHoursOfService(InternationalString hoursOfService) {
    this.hoursOfService = hoursOfService;
  }

  public Contact contactInstructions(InternationalString contactInstructions) {
    this.contactInstructions = contactInstructions;
    return this;
  }

   /**
   * Get contactInstructions
   * @return contactInstructions
  **/
  @ApiModelProperty(value = "")
  public InternationalString getContactInstructions() {
    return contactInstructions;
  }

  public void setContactInstructions(InternationalString contactInstructions) {
    this.contactInstructions = contactInstructions;
  }

  public Contact address(Address address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @ApiModelProperty(value = "")
  public Address getAddress() {
    return address;
  }

  public void setAddress(Address address) {
    this.address = address;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Contact contact = (Contact) o;
    return Objects.equals(this.phone, contact.phone) &&
        Objects.equals(this.onLineResource, contact.onLineResource) &&
        Objects.equals(this.hoursOfService, contact.hoursOfService) &&
        Objects.equals(this.contactInstructions, contact.contactInstructions) &&
        Objects.equals(this.address, contact.address);
  }

  @Override
  public int hashCode() {
    return Objects.hash(phone, onLineResource, hoursOfService, contactInstructions, address);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Contact {\n");

    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    onLineResource: ").append(toIndentedString(onLineResource)).append("\n");
    sb.append("    hoursOfService: ").append(toIndentedString(hoursOfService)).append("\n");
    sb.append("    contactInstructions: ").append(toIndentedString(contactInstructions)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}