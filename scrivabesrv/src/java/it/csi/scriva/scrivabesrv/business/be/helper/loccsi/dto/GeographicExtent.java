/*-
 * ========================LICENSE_START=================================
 * 
 * Copyright (C) 2025 Regione Piemonte
 * 
 * SPDX-FileCopyrightText: (C) Copyright 2025 Regione Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * ricerca-fulltext-geografica
 * Servizi di ricerca full text con localizzazione geografica
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.scriva.scrivabesrv.business.be.helper.loccsi.dto;

import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * GeographicExtent
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-02-24T08:29:11.008Z")
public class GeographicExtent {
  private Boolean inclusion = null;

  public GeographicExtent inclusion(Boolean inclusion) {
    this.inclusion = inclusion;
    return this;
  }

   /**
   * Get inclusion
   * @return inclusion
  **/
  @ApiModelProperty(value = "")
  public Boolean isInclusion() {
    return inclusion;
  }

  public void setInclusion(Boolean inclusion) {
    this.inclusion = inclusion;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GeographicExtent geographicExtent = (GeographicExtent) o;
    return Objects.equals(this.inclusion, geographicExtent.inclusion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inclusion);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GeographicExtent {\n");

    sb.append("    inclusion: ").append(toIndentedString(inclusion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}