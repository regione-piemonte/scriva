/*-
 * ========================LICENSE_START=================================
 * 
 * Copyright (C) 2025 Regione Piemonte
 * 
 * SPDX-FileCopyrightText: (C) Copyright 2025 Regione Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * ECMEngine
 * Servizi di fruizione ECM INDEX.
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.scriva.scrivabesrv.business.be.helper.index.dto;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Oggetto che incapsula - tokenUuid se il numerofirme richiede una elaborazione asincrona - altrimenti VerifyReport (esito della verifica).
 */
@ApiModel(description = "Oggetto che incapsula - tokenUuid se il numerofirme richiede una elaborazione asincrona - altrimenti VerifyReport (esito della verifica).")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-03-29T13:41:28.556Z")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class VerifyReportExt {
    @JsonProperty("tokenUuid")
    private String tokenUuid = null;

    @JsonProperty("signCount")
    private Integer signCount = null;

    @JsonProperty("report")
    private VerifyReport report = null;

    /**
     * Token uuid verify report ext.
     *
     * @param tokenUuid the token uuid
     * @return the verify report ext
     */
    public VerifyReportExt tokenUuid(String tokenUuid) {
        this.tokenUuid = tokenUuid;
        return this;
    }

    /**
     * Token Uuid dell&#39;elaborazione asincrona.
     *
     * @return tokenUuid token uuid
     */
    @ApiModelProperty(value = "Token Uuid dell'elaborazione asincrona.")
    public String getTokenUuid() {
        return tokenUuid;
    }

    /**
     * Sets token uuid.
     *
     * @param tokenUuid the token uuid
     */
    public void setTokenUuid(String tokenUuid) {
        this.tokenUuid = tokenUuid;
    }

    /**
     * Sign count verify report ext.
     *
     * @param signCount the sign count
     * @return the verify report ext
     */
    public VerifyReportExt signCount(Integer signCount) {
        this.signCount = signCount;
        return this;
    }

    /**
     * Numero di firme.
     *
     * @return signCount sign count
     */
    @ApiModelProperty(example = "2", value = "Numero di firme.")
    public Integer getSignCount() {
        return signCount;
    }

    /**
     * Sets sign count.
     *
     * @param signCount the sign count
     */
    public void setSignCount(Integer signCount) {
        this.signCount = signCount;
    }

    /**
     * Report verify report ext.
     *
     * @param report the report
     * @return the verify report ext
     */
    public VerifyReportExt report(VerifyReport report) {
        this.report = report;
        return this;
    }

    /**
     * Get report
     *
     * @return report report
     */
    @ApiModelProperty(value = "")
    public VerifyReport getReport() {
        return report;
    }

    /**
     * Sets report.
     *
     * @param report the report
     */
    public void setReport(VerifyReport report) {
        this.report = report;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        VerifyReportExt verifyReportExt = (VerifyReportExt) o;
        return Objects.equals(this.tokenUuid, verifyReportExt.tokenUuid) &&
                Objects.equals(this.signCount, verifyReportExt.signCount) &&
                Objects.equals(this.report, verifyReportExt.report);
    }

    @Override
    public int hashCode() {
        return Objects.hash(tokenUuid, signCount, report);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class VerifyReportExt {\n");

        sb.append("    tokenUuid: ").append(toIndentedString(tokenUuid)).append("\n");
        sb.append("    signCount: ").append(toIndentedString(signCount)).append("\n");
        sb.append("    report: ").append(toIndentedString(report)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}