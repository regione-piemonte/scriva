/*-
 * ========================LICENSE_START=================================
 * 
 * Copyright (C) 2025 Regione Piemonte
 * 
 * SPDX-FileCopyrightText: (C) Copyright 2025 Regione Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * ECMEngine
 * Servizi di fruizione ECM INDEX.
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.scriva.scrivabesrv.business.be.helper.index.dto;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Dettagli sulla nuova associazione e tipo di operazione (modalità asincrona).
 */
@ApiModel(description = "Dettagli sulla nuova associazione e tipo di operazione (modalità asincrona).")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-03-29T13:41:28.556Z")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class ModifyAssociationJobRequest {
    /**
     * valori ammessi per action:  * moveJob -  Effettua una richiesta di spostamento di un nodo asincrona.  * linkJob - Effettua una richiesta di link di un nodo asincrona.
     */

    public enum ActionEnum {
        /**
         * Movejob action enum.
         */
        MOVEJOB("moveJob"),

        /**
         * Linkjob action enum.
         */
        LINKJOB("linkJob");

        private String value;

        ActionEnum(String value) {
            this.value = value;
        }

        /**
         * Gets value.
         *
         * @return the value
         */
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        /**
         * From value action enum.
         *
         * @param text the text
         * @return the action enum
         */
        public static ActionEnum fromValue(String text) {
            for (ActionEnum b : ActionEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }
    }

    @JsonProperty("action")
    private ActionEnum action = null;

    @JsonProperty("association")
    private Association association = null;

    /**
     * Action modify association job request.
     *
     * @param action the action
     * @return the modify association job request
     */
    public ModifyAssociationJobRequest action(ActionEnum action) {
        this.action = action;
        return this;
    }

    /**
     * valori ammessi per action:  * moveJob -  Effettua una richiesta di spostamento di un nodo asincrona.  * linkJob - Effettua una richiesta di link di un nodo asincrona.
     *
     * @return action action
     */
    @ApiModelProperty(value = "valori ammessi per action:  * moveJob -  Effettua una richiesta di spostamento di un nodo asincrona.  * linkJob - Effettua una richiesta di link di un nodo asincrona. ")
    public ActionEnum getAction() {
        return action;
    }

    /**
     * Sets action.
     *
     * @param action the action
     */
    public void setAction(ActionEnum action) {
        this.action = action;
    }

    /**
     * Association modify association job request.
     *
     * @param association the association
     * @return the modify association job request
     */
    public ModifyAssociationJobRequest association(Association association) {
        this.association = association;
        return this;
    }

    /**
     * Get association
     *
     * @return association association
     */
    @ApiModelProperty(value = "")
    public Association getAssociation() {
        return association;
    }

    /**
     * Sets association.
     *
     * @param association the association
     */
    public void setAssociation(Association association) {
        this.association = association;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ModifyAssociationJobRequest modifyAssociationJobRequest = (ModifyAssociationJobRequest) o;
        return Objects.equals(this.action, modifyAssociationJobRequest.action) &&
                Objects.equals(this.association, modifyAssociationJobRequest.association);
    }

    @Override
    public int hashCode() {
        return Objects.hash(action, association);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ModifyAssociationJobRequest {\n");

        sb.append("    action: ").append(toIndentedString(action)).append("\n");
        sb.append("    association: ").append(toIndentedString(association)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}